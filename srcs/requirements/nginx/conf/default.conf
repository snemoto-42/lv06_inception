events{}

http{

	# upstream wordpress {
	# 	server wordpress;
	# }

	# server {
	# 	listen 80;
	# 	server_name localhost;
	# 	# server_name snemoto.42.fr;

	# 	return 301 https://$host$request_uri;
	# }

	server {
		listen 443 ssl;
		server_name localhost;
		# server_name snemoto.42.fr;

		ssl_certificate /etc/nginx/ssl/nginx.crt;
		ssl_certificate_key /etc/nginx/ssl/nginx.key;
		ssl_protocols TLSv1.2 TLSv1.3;

		root /var/www/html;
		index index.php index.html index.htm;

		location / {
			# try_files $uri $uri/ =404;
			try_files $uri $uri/ /index.php?$args;

			# try_files $uri $uri/ /index.php?$is_args$args;
			# proxy_pass http://wordpress:9000;
			# proxy_set_header Host $host;
			# proxy_set_header X-Real-IP $remote_addr;
			# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# proxy_set_header X-Forwarded-Proto $scheme;
		}

		location ~ \.php$ {
			# include snippets/fastcgi-php.conf;
			# fastcgi_pass wordpress:/run/php/php8.2-fpm.sock;

			fastcgi_split_path_info ^(.+\.php)(/.+)$;
			fastcgi_pass wordpress:9000;
			include fastcgi_params;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param PATH_INFO $fastcgi_path_info;
		}

		# .htaccessなど.htファイルへのアクセス拒否
		location ~ /\.ht {
			deny all;
		}

		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;
	}
}

# user nginx;
# worker_processes auto;
# pid /run/nginx.pid;

# events {
# 	worker_connections 1024;
# }

# http {
# 	include /etc/nginx/mime.type;
# 	default_type aplication/octet-stream;
# 	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
# 					'$status $body_bytes_sent "$http_referer" '
# 					'"$http_user_agent" "$http_x_forwarded_for"';
# 	sendfile on;
# 	keepalive_timeout 65;
# 	client_max_body_size 100M;

# 	ssl_protocols TLSv1.2 TLSv1.3;
# 	ssl_prefer_sercer_ciphers on;
# 	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
# 	ssl_ecdh_curve secp384r1;
# 	ssl_session_timeout 10m;
# 	ssl_session_cache shared:SSL:10m;
# 	ssl_session_tickets off;
# 	ssl_stapling on;
# 	ssl_stapling_verify on;

# 	ssl_certificates /etc/nginx/certs/nginx-selfsigned.crt;
# 	ssl_certificates_keys /etc/nginx/certs/nginx-selfsigned.key;
# }
